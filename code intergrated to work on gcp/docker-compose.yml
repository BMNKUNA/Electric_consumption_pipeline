version: '3.8'

services:
  kafka:
    image: bitnami/kafka:3.5.1 
    container_name: de-streaming-pipeline-kafka-1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 # Simplified for internal Docker network
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT # Simplified map
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - "kafka_data:/bitnami/kafka"
    restart: always
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy: 
      resources:
        limits:
          cpus: '0.5' 
          memory: 1G  

  datagen-producer:
    build:
      context: .
      dockerfile: Dockerfile.datagen-producer
    container_name: de-streaming-pipeline-datagen-producer-1
    depends_on:
      - kafka
    restart: always

  streamer:
    build:
      context: .
      dockerfile: Dockerfile.streamer
    container_name: de-streaming-pipeline-streamer-1
    depends_on:
      - kafka
    restart: always

  google-cloud-writer:
    build:
      context: .
      dockerfile: Dockerfile.google-cloud-writer
    container_name: de-streaming-pipeline-google-cloud-writer-1
    depends_on:
      - kafka
    restart: always

volumes:
  kafka_data:
    driver: local

